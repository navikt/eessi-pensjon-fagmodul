buildscript {

    ext {
        kotlinVersion = '1.6.21'
        springBootVersion = '2.6.8'
        springfoxVersion = '3.0.0'
        jacksonModuleKotlinVersion = '2.13.3'
        cxfVersion = '3.5.1'
        tokenSupportVersion = '1.3.9'
        logstashLogbackVersion = '7.1.1'
        pensjonInformasjonVersion = '9.4.10'
        eppersonoppslagVersion = '10.1.1'
        archunitVersion = '0.23.1'
        epeuxVersion = '1.1.72'
        epMetricsVersion = '0.4.28'
        epSecurityVersion = '0.0.22'
        epLoggingVersion = '1.0.23'
        epPensjonInformasjonVersjon = '2.0.14'
        springKafkaVersion = '2.8.6'
    }

    repositories {
        mavenCentral()
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.openrepose.gradle.plugins.jaxb" version "2.5.0"
    id 'com.github.ben-manes.versions' version '0.42.0'
    id "se.patrikerdes.use-latest-versions" version "0.2.18"
    id "org.owasp.dependencycheck" version "7.1.1"
    id "com.vanniktech.dependency.graph.generator" version "0.8.0"
    id 'com.adarshr.test-logger' version '3.2.0'
    id "org.sonarqube" version "3.4.0.2513"
    id 'jacoco'
}

assert JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_17): "Java 17 or newer is required"

group = 'no.nav.eessi'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

compileKotlin {
    kotlinOptions.jvmTarget = "17"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}

jar {
    archivesBaseName = 'eessi-fagmodul'
}

dependencies {

    // Spring-boot
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-aop:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-cache:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-starter-actuator:$springBootVersion")
    implementation("org.springframework.boot:spring-boot-actuator:$springBootVersion")

    // Kotlin
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonModuleKotlinVersion")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonModuleKotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    implementation("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")

    // Logging
    implementation("net.logstash.logback:logstash-logback-encoder:$logstashLogbackVersion")
    configurations { all*.exclude group: 'commons-logging', module: 'commons-logging' }
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j'

    // auditlogger syslog la stÃ¥ i 1.0.0 / 0.9.30
    implementation("com.papertrailapp:logback-syslog4j:1.0.0")
    implementation("org.syslog4j:syslog4j:0.9.30")

    //auth
    implementation("no.nav.security:token-client-spring:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-spring:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-jaxrs:${tokenSupportVersion}")
    implementation("no.nav.security:token-validation-test-support:${tokenSupportVersion}")

    implementation ("no.nav.common:token-client:2.2022.04.01_08.27-cbfeb0be0ee0")
    implementation("org.springframework.kafka:spring-kafka:${springKafkaVersion}")

    // Micrometer
    implementation('io.micrometer:micrometer-registry-prometheus:1.9.0')

    implementation("no.nav.eessi.pensjon:ep-metrics:$epMetricsVersion")
    implementation("no.nav.eessi.pensjon:ep-logging:$epLoggingVersion")
    implementation("no.nav.eessi.pensjon:ep-personoppslag:$eppersonoppslagVersion")
    implementation("no.nav.eessi.pensjon:ep-pensjonsinformasjon:$epPensjonInformasjonVersjon")
    implementation("no.nav.eessi.pensjon:ep-eux:$epeuxVersion")

    implementation("no.nav.tjenestespesifikasjoner:pensjonsinformasjon-v1-tjenestespesifikasjon:1.2021.01.21-11.34-02f5eb27bb76")

    // Forenklere mocking av beans, benyttes som mockito mockbean
    testImplementation("com.ninja-squad:springmockk:3.1.1")
    testImplementation('org.pac4j:spring-webmvc-pac4j:6.0.3')

    //mock - test
    testImplementation('io.mockk:mockk:1.12.4')
    testImplementation("org.junit.platform:junit-platform-suite-api:1.8.2")
    testImplementation("org.skyscreamer:jsonassert:1.5.1")

    //Kafka
    testImplementation("org.springframework.kafka:spring-kafka-test:${springKafkaVersion}")

    testImplementation("org.jetbrains.kotlin:kotlin-test:$kotlinVersion") {
        exclude module: 'kotlin-test-js'
        exclude module: 'kotlin-test-testng'
    }

    // Architecture tests keep archunit at 0.22
    testImplementation("com.tngtech.archunit:archunit:$archunitVersion")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude module: 'junit'
        exclude module: "mockito-core"
        exclude module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

// https://docs.gradle.org/current/userguide/jacoco_plugin.html
jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

tasks.sonarqube.dependsOn tasks["jacocoTestReport"]

repositories {
    mavenCentral()
    maven {
        url 'https://repo.clojars.org'
        name 'Clojars'
    }

    ["maven-release","ep-personoppslag","tjenestespesifikasjoner","ep-metrics","ep-pensjonsinformasjon"].each { repo ->
        String token = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.key")
        if (!token) throw new NullPointerException("Missing token, you have to set GITHUB_TOKEN or gpr.key, see README")
        maven {
            url = uri("https://maven.pkg.github.com/navikt/$repo")
            credentials {
                username = "token"
                password = token
            }
        }
    }
}

/* https://github.com/ben-manes/gradle-versions-plugin */
dependencyUpdates {
    rejectVersionIf {
        ['alpha', 'beta', 'b', 'rc', 'cr', 'm', 'preview', 'pr']
                .any { qualifier -> it.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/}
    }
    revision = 'release'
}
