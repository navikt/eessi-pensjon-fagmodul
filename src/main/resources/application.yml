
# issuer.isso = cookie token from UI (browser)
# issuer.oidc = bearer token from API (header)
# issuer.pesys = bearer token from other places (servicebruker) (header)

no.nav.security.jwt:
 issuer.isso:
   proxyurl:
   cookiename: 'eessipensjon-idtoken'
   discoveryurl: '${OPENIDCONNECT_URL}/oauth2/.well-known/openid-configuration'
   accepted_audience: 'eessi-pensjon-frontend-api-fss-${ENV}'
 issuer.oidc:
   discoveryurl: '${OPENIDCONNECT_URL}/oauth2/.well-known/openid-configuration'
   accepted_audience: 'eessi-fagmodul-${ENV},eessi-pensjon-frontend-api-fss-${ENV},ida-q'
 issuer.servicebruker:
   discoveryurl: '${security-token-service-openid-configuration_url}'
   accepted_audience: 'srvpensjon,srveessipensjon,srveessi-pensjon-j,srveessi-pensjon-b'

# Empty on purpose so that oidc-spring-support doesn't use http.proxy
http.proxy.parametername:

securityTokenService:
  discoveryUrl: ${SECURITY_TOKEN_SERVICE_OPENID_CONFIGURATION_URL}

METRICS_REQUESTFILTER_ENABLE: false

management:
  endpoints:
    metrics:
      enabled: true
    web:
      exposure:
        include: info, health, metrics, prometheus
    export:
      prometheus:
        enabled: true
    prometheus:
      enabled: true

spring:
  metrics:
    web:
      server:
        auto-time-requests: true

eessi:
#  pensjon_lokalnavn: 'NOINST002, NO INST002, NO'
#  pensjon_lokalnavn: ''
  pensjon_adresse_gate: 'Postboks 6600 Etterstad'
  pensjon_adresse_by:   'Oslo'
  pensjon_adresse_postnummer: '0607'
  pensjon_adresse_land: 'NO'


#Embedded tomcat
server:
  servlet:
    session:
      timeout: '120s'
  error:
    include-message: always

kafka:
  statistikk:
    topic: ${KAFKA_STATISTIKK_TOPICNAME}
  security.protocol: SSL
