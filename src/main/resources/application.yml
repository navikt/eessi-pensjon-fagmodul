
# issuer.isso = cookie token from UI (browser)
# issuer.oidc = bearer token from API (header)
# issuer.pesys = bearer token from other places (servicebruker) (header)

no.nav.security.oidc:
 issuer.isso:
   proxyurl:
   cookiename: 'eessipensjon-idtoken'
   discoveryurl: '${OPENIDCONNECT_URL}/oauth2/.well-known/openid-configuration'
   accepted_audience: 'eessi-pensjon-frontend-api-fss-${FASIT_ENVIRONMENT_NAME}'
 issuer.oidc:
   discoveryurl: '${OPENIDCONNECT_URL}/oauth2/.well-known/openid-configuration'
   accepted_audience: 'eessi-fagmodul-${FASIT_ENVIRONMENT_NAME},eessi-pensjon-frontend-api-fss-${FASIT_ENVIRONMENT_NAME},ida-t,ida-q'
 issuer.pesys:
   discoveryurl: '${security-token-service-openid-configuration_url}'
   accepted_audience: 'srvpensjon,srveessipensjon,srveessi-pensjon-j,srveessi-pensjon-b'

# Older iodc audience: security-token-service,freg-token-provider-p,freg-token-provider-t0,freg-token-provider-q4,
# preprod.local,security-token-service-t10,  https://security-token-service-t10.nais.preprod.local/rest/v1/sts/.well-known/openid-configuration
# Empty on purpose so that oidc-spring-support doesn't use http.proxy
http.proxy.parametername:

# TODO: These actuator-endpoints need to be secured before going to production. Also, enable only whats needed.
management:
  endpoints:
    metrics.enabled: true
    web.exposure.include: '*'
    export.prometheus.enabled: true
    prometheus.enabled: true
  metrics.web.server.auto-time-requests: true

eessi:
#  pensjon_lokalnavn: 'NOINST002, NO INST002, NO'
#  pensjon_lokalnavn: ''
  pensjon_adresse_gate: 'Postboks 6600 Etterstad'
  pensjon_adresse_by:   'Oslo'
  pensjon_adresse_postnummer: '0607'
  pensjon_adresse_land: 'NO'


#Embedded tomcat
server:
  servlet:
    session:
      timeout: '120s'
      
kafka:
  sedSendt:
    topic: eessi-basis-sedSendt-v1
    groupid: eessi-pensjon-fagmodul-group
  sedMottatt:
    topic: eessi-basis-sedMottatt-v1
    groupid: eessi-pensjon-fagmodul-group

#Spring
spring:
  kafka:
    listener:
      ack-mode: manual
    consumer:
      enable-auto-commit: false
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS_URL}
    properties:
      security.protocol: SASL_SSL
      value.subject.name.strategy: io.confluent.kafka.serializers.subject.TopicRecordNameStrategy
      key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      sasl:
        mechanism: PLAIN
        jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${SRVEESSIPENSJON_USERNAME}" password="${SRVEESSIPENSJON_PASSWORD}";

requestsamlpolicy.path: "classpath:policy/requestSamlPolicy.xml"