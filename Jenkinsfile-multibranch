#!/usr/bin/env groovy
@Library('jenkins-pipeline-lib') _

node {
    def commitHash
    cleanWs()

    stage("checkout") {
        checkout scm

        commitHash = sh(script: 'git rev-parse HEAD', returnStdout: true).trim()
    }

    stage("build") {
        try {
            sh "make"
        } catch (e) {
            junit('build/test-results/test/**/*.xml')
            publishHTML([
                    allowMissing         : false,
                    alwaysLinkToLastBuild: false,
                    keepAll              : true,
                    reportDir            : 'build/reports/tests/test',
                    reportFiles          : 'index.html',
                    reportName           : 'HTML Report',
                    reportTitles         : ''
            ])

            throw e
        }
    }

    stage("release") {
        withCredentials([usernamePassword(credentialsId: 'nexusUploader', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
            sh "docker login -u ${env.NEXUS_USERNAME} -p ${env.NEXUS_PASSWORD} repo.adeo.no:5443"
        }

        sh "make docker-push VERSION=${commitHash}"
    }

    stage("upload manifest") {
        withCredentials([usernamePassword(credentialsId: 'nexusUploader', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
            sh "make manifest VERSION=${commitHash}"
        }
    }

    stage("deploy") {
        build([
                job       : 'nais-deploy-pipeline',
                wait      : true,
                parameters: [
                        string(name: 'APP', value: "eessi-fagmodul"),
                        string(name: 'REPO', value: "navikt/eessi-pensjon-fagmodul"),
                        string(name: 'VERSION', value: commitHash),
                        string(name: 'DEPLOY_REF', value: commitHash),
                        string(name: 'NAMESPACE', value: 't10'),
                        string(name: 'DEPLOY_ENV', value: 't10')
                ]
        ])
    }

    stage("update api-gw") {
        apigw.registerFromFSSToSBSInTestEnvironment("eessi-fagmodul", "eessifagmodulservice", "eessi-pensjon-frontend-api", "t10")
    }
}
